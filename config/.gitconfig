[alias]
    a = add
    alias = "!git config -l | grep alias | cut -c 7-"
    br = branch -avv
    brd = branch -D
    # Simpler commit, add
    c = commit -S -m
    # Commit all changes
    ca = commit -S -am
    # Clone a repository including all submodules
    cl = clone --recursive
    # checkout branch or create it if it does not exist yet
    co = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
    # Show the diff between the latest commit and the current state
    d = diff
    # `git di $number` shows the diff between the state `$number` revisions ago and the current state
    di = "!d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lasttag = "!git describe --tags $(git rev-list --tags --max-count=1)"
    lp = log -p
    p = push
    # Push tags
    pt = push origin --tags
    # erase knowledge of branches that no longer exist on the remote
    pr = remote prune origin
    # Pull in remote changes for the current repository and all its submodules
    pul = "!git pull --rebase; git submodule update --recursive"
    # Push local branch to the same name on remote & set up tracking
    puu = push -u origin HEAD
    # Interactive rebase with the given number of latest commits
    reb = "!r() { git rebase -i HEAD~$1; }; r"
    rem = remote -v
    # View the current working tree status using the short format
    s = status -sb
    # Squash last commit into one before it
    sq = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B -n ${1})\"; };f"
    t = tag
    # Show verbose output about tags, branches or remotes
    tags = tag -l
    # remove from staging
    unstage = restore --staged

[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix

[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.hgignore
    attributesfile = ~/.gitattributes
    # Treat spaces before tabs, lines that are indented with 8 or more spaces, and
    # all kinds of trailing whitespace as an error.
    # [default] trailing-space: looks for spaces at the end of a line
    # [default] space-before-tab: looks for spaces before tabs at the beginning of
    # a line
    whitespace = space-before-tab,-indent-with-non-tab,trailing-space
    # Make `git rebase` safer on OS X
     # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
     trustctime = false
    # Prevent showing files whose names contain non-ASCII symbols as unversioned.
    # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
    precomposeunicode = false

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[commit]
    gpgsign = true

[diff]
    external = difft
    submodule = log

[diff "exif"]
    textconv = exiftool

[help]
    autocorrect = 1

[init]
    defaultBranch = main

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true
    # use VS Code for merge commits
    tool = code

[mergetool "code"]
    cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED

[pull]
    rebase = true

[push]
    default = matching
    # push annotated tags, too
    followTags = true

[rebase]
    # Git won't rebase a dirty working tree, this works around that
    autostash = true

# URL shorthands
[url "git@github.com:"]
    insteadOf = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
    insteadOf = "github:"
[url "git@gitlab.com:"]
    insteadOf = "gl:"
[url "https://github.com/"]
    insteadOf = "hgh:"

[user]
    name = phette23
    email = phette23@gmail.com
    signingkey = DC78D0C0DF787B67
